# Copyright 2021 Canonical Ltd.
# See LICENSE file for licensing details.
[tox]
isolated_build = True
skip_missing_interpreters = True
envlist = lint, static-{charm,lib}, unit, scenario

[vars]
src_path = {toxinidir}/src
tst_path = {toxinidir}/tests
lib_path = {toxinidir}/lib/charms/grafana_agent/v0
all_path = {[vars]src_path} {[vars]tst_path} {[vars]lib_path}

[testenv]
basepython = python3
setenv =
  PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
  PYTHONBREAKPOINT=ipdb.set_trace
  PY_COLORS=1
skip_install=True

[testenv:fmt]
description = Apply coding style standards to code
deps =
    ruff
commands =
    ruff check --fix {[vars]all_path}
    ruff format {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    ruff
    codespell
commands =
    codespell . --skip .git --skip .tox --skip build --skip lib --skip venv --skip .mypy_cache --skip *.svg
    ruff check {[vars]all_path}
    ruff format --check {[vars]all_path}

[testenv:static-{charm,lib}]
description = Run static analysis checks
deps =
    pyright
    -r {toxinidir}/requirements.txt
    lib: ops
commands =
    charm: pyright {[vars]src_path}
    lib: pyright {[vars]lib_path}

[testenv:unit]
description = Run machine charm unit tests
deps =
    -r{toxinidir}/requirements.txt
    pytest
    pytest-subtests
    coverage[toml]
    deepdiff
    fs
    toml
    responses
commands =
    coverage run \
      --source={[vars]src_path} \
      -m pytest -v --tb native --log-cli-level=INFO -s {posargs} {[vars]tst_path}/unit
    coverage report -m

[testenv:scenario]
description = Run scenario tests on LXD
deps =
    -r{toxinidir}/requirements.txt
    pytest
    cosl
    ops-scenario~=6.1
commands =
    pytest -vv --tb native --log-cli-level=INFO -s {posargs} {[vars]tst_path}/scenario/test_machine_charm

[testenv:integration]
description = Run integration tests
deps =
    aiohttp
    asyncstdlib
    # Libjuju needs to track the juju version
    juju ~= 3.3.0
    # https://github.com/juju/python-libjuju/issues/1184
    websockets<14.0
    # Temporarily pinning pytest due to https://github.com/charmed-kubernetes/pytest-operator/issues/131
    pytest ~= 8.1.1
    prometheus-api-client
    # newer versions don't work well when charmcraft pack produces more than 1 file
    # build_charm only processes the 1st file
    pytest-operator == 0.35.0
commands =
    pytest -v --tb native --log-cli-level=INFO -s {posargs} {[vars]tst_path}/integration

[testenv:check]
depends =
    lint
    static

[coverage:run]
relative_files = True

[testenv:pack-24.04]
description = Patch charmcraft.yaml with necessary changes for a 24.04 build, pack and restore
allowlist_externals =
    sh
commands =
    sh -c "patch {toxinidir}/charmcraft.yaml < {toxinidir}/charmcraft-24.04.patch && charmcraft pack --project-dir={toxinidir}; git -C {toxinidir} restore charmcraft.yaml"

